name: Sync develop with master

'on':
  pull_request:
    types:
      - closed
    branches:
      - master

permissions:
  contents: write

jobs:
  start:
    name: "Starting Sync - ðŸ¤ž"
    runs-on: ubuntu-latest
    steps:
      - name: Initialize Workflow
        run: echo "Starting branch synchronization of ${{ github.repository }}"

  create_pr_for_nonplugin:
    name: Create PR for Non-Plugin Changes
    needs: start
    if: >
      github.event.pull_request.merged == true && 
      !(startsWith(github.event.pull_request.head.ref, 'web_submission_') && 
      contains(github.event.pull_request.title, 'brain-score.org submission'))
    runs-on: ubuntu-latest
    steps:
      - name: Set Git User Identity
        run: |
          git config --global user.name "Branch Sync Bot"
          git config --global user.email "BranchSyncBot@github.com"

      - name: Set Token Priority
        id: set-token
        run: |
          if [ -n "${{ secrets.PAT }}" ]; then
            echo "Using PAT token"
            echo "TOKEN=${{ secrets.PAT }}" >> $GITHUB_ENV
          else
            echo "Using fallback GITHUB_TOKEN"
            echo "TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          fi
          
      - name: Checkout Develop Branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: develop
          
      - name: Fetch and Reset Local Master
        run: |
          git fetch origin develop
          git fetch origin master

      - name: Log Branch Differences
        run: |
          echo "Differences between develop and master:"
          git log origin/develop..origin/master --oneline
          echo "Differences between master and develop:"
          git log origin/master..origin/develop --oneline

      - name: Soft Reset Develop to Master
        run: |
          git reset --soft origin/master
          git add -A
          git commit -m "Sync master into develop for non-plugin PR #${{ github.event.pull_request.number }}"

      - name: Log Branch State After Reset
        run: |
          echo "After Reset:"
          git log --oneline --graph -10

      - name: Push Temporary Branch
        run: |
          git checkout -b Developer-Sync-Nonplugin-${{ github.run_id }}
          git push origin Developer-Sync-Nonplugin-${{ github.run_id }}

      - name: Create Pull Request for Rebased Changes
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ env.TOKEN }}
          commit-message: Rebase master into develop for non-plugin PR ${{ github.event.pull_request.number }}
          title: Sync master into develop for non-plugin PR ${{ github.event.pull_request.number }}
          body: >-
            This PR rebases the changes from the master branch into the develop branch.
            Please review and merge.
          base: develop
          branch: 'Developer-Sync-Nonplugin-${{ github.run_id }}'

  auto_sync_for_plugin:
    name: Sync Plugin Changes Directly
    needs: start
    if: >
      github.event.pull_request.merged == true && 
      startsWith(github.event.pull_request.head.ref, 'web_submission_') && 
      contains(github.event.pull_request.title, 'brain-score.org submission')
    runs-on: ubuntu-latest
    steps:
      - name: Set Git User Identity
        run: |
          git config --global user.name "Branch Sync Bot"
          git config --global user.email "BranchSyncBot@github.com"

      - name: Set Token Priority
        id: set-token
        run: |
          if [ -n "${{ secrets.PAT }}" ]; then
            echo "Using PAT token"
            echo "TOKEN=${{ secrets.PAT }}" >> $GITHUB_ENV
          else
            echo "Using fallback GITHUB_TOKEN"
            echo "TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          fi

      - name: Checkout Develop Branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: develop
          
      - name: Rebase Develop onto Master
        id: rebase
        run: |
          git fetch origin master
          git rebase origin/master || echo "conflict=true" >> $GITHUB_ENV

      - name: Push Rebased Develop
        if: env.conflict != 'true'
        run: |
          git push origin develop --force-with-lease

      - name: Create Pull Request for Manual Review (Conflicts or Updates)
        if: env.conflict == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ env.TOKEN }}
          commit-message: Rebase develop onto master with conflict resolution
          title: Resolve conflicts between master and develop
          body: >-
            This PR rebases the develop branch onto the master branch. Conflicts need to be resolved manually.
          base: develop
          branch: 'Developer-Sync-PluginConflict-${{ github.event.pull_request.number }}'
