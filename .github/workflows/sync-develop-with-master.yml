name: Sync develop with master

on:
  pull_request:
    types: [closed]
    branches:
      - master

permissions:
  contents: write

jobs:
  start:
    name: "Starting -ðŸ¤ž"
    runs-on: ubuntu-latest
    steps:
      - name: Starting
        id : init
        run: |
          echo "Starting branch synchronization of ${{ github.repository }}"

  rebase_or_merge:
    name: "Rebase and Fallback to Merge"
    needs: start
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Check out the develop branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history
          ref: develop

      - name: Attempt Rebase master onto develop
        id: rebase
        run: |
          git fetch origin master
          git checkout develop
          git rebase origin/master || {
            echo "Rebase conflict detected, setting fallback to merge."
            echo "::set-output name=needs_merge::true"
            git rebase --abort
          }

      - name: Fallback to Merge if Rebase Fails
        if: steps.rebase.outputs.needs_merge == 'true'
        run: |
          git fetch origin master
          git checkout develop
          git merge origin/master || {
            echo "Merge conflict detected"
            exit 1
          }

      - name: Push changes to develop
        if: steps.rebase.outputs.needs_merge != 'true'
        run: |
          git push origin develop --force-with-lease

      - name: Push changes after Merge
        if: steps.rebase.outputs.needs_merge == 'true'
        run: |
          git push origin develop --force-with-lease

      - name: Create pull request for merge conflicts
        if: failure()
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          commit-message: "Sync master into develop with conflict resolution"
          title: "Resolve conflicts between master and develop"
          body: "This PR resolves conflicts between master and develop using a merge."
          base: develop
          branch: developer-sync-pr-conflict-${{ github.event.pull_request.number }}

      - name: Handle other failures
        if: failure() && steps.rebase.outputs.needs_merge != 'true'
        run: |
          echo "Handle non-conflict related failure, such as network issues or missing branches"
          # You can add additional error handling logic here.
